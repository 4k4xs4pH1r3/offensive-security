syntax = "proto3";

package gemini.auth;

// Service for authenticating users with Google OAuth2 within Gemini.
service AuthService {
  // Initiates the Google OAuth2 authentication flow.
  rpc Authenticate (AuthenticateRequest) returns (AuthenticateResponse) {}
}

// Request message for initiating authentication.
message AuthenticateRequest {
  // The client ID of the Gemini application registered with Google.
  string client_id = 1;
  // The redirect URI where Google should redirect the user after authentication.
  string redirect_uri = 2;
  // (Optional) The scopes of access being requested from the user.
  repeated string scopes = 3;
}

// Response message containing the OAuth2 authorization URL.
message AuthenticateResponse {
  // The URL the user should be redirected to for authorization.
  string authorization_url = 1;
}

// Service for exchanging an authorization code for access and refresh tokens.
service TokenService {
  // Exchanges the authorization code for tokens.
  rpc ExchangeCode (ExchangeCodeRequest) returns (ExchangeCodeResponse) {}
  
  // Refreshes the access token using the refresh token.
  rpc RefreshToken (RefreshTokenRequest) returns (RefreshTokenResponse) {}
}

// Request message for exchanging the authorization code.
message ExchangeCodeRequest {
  // The authorization code received from Google.
  string code = 1;
  // The client ID of the Gemini application.
  string client_id = 2;
  // The client secret of the Gemini application.
  string client_secret = 3;
  // The redirect URI used in the initial request.
  string redirect_uri = 4;
}

// Response message containing the access and refresh tokens.
message ExchangeCodeResponse {
  // The access token granted by Google.
  string access_token = 1;
  // The refresh token used to obtain new access tokens.
  string refresh_token = 2;
  // The type of token granted (e.g., "Bearer").
  string token_type = 3;
  // The number of seconds the access token is valid for.
  int32 expires_in = 4;
}

// Request message for refreshing the access token.
message RefreshTokenRequest {
  // The refresh token obtained during the initial token exchange.
  string refresh_token = 1;
  // The client ID of the Gemini application.
  string client_id = 2;
  // The client secret of the Gemini application.
  string client_secret = 3;
}

// Response message containing the refreshed access token.
message RefreshTokenResponse {
  // The new access token granted by Google.
  string access_token = 1;
  // The type of token granted (e.g., "Bearer").
  string token_type = 2;
  // The number of seconds the access token is valid for.
  int32 expires_in = 3;
}
